---
import SlideTitle from "@/components/SlideTitle.astro";
import Slide from "../../components/Slide.astro";

import BabelLogo from "../../assets/images/now/babel-logo.png?url";
import ViteLogo from "../../assets/images/now/vite-logo.png?url";
import NextLogo from "../../assets/images/now/next-logo.png?url";
import RemixLogo from "../../assets/images/now/remix-logo.png?url";
import Ressource from "@/components/Ressource.astro";

import Leak from "@/assets/images/problem/leak.png?url";
import CallChain from "@/assets/images/problem/callchain.png?url";
import LeakGif from "@/assets/images/problem/leak_gif.webp?url";
---

<Slide>
	<Slide>
		<SlideTitle
			title="Qu'est ce qu'on peux faire d√®s maintenant"
			punctuation="?"
			style={{
				margin: "auto",
				fontSize: "2rem",
				fontWeight: "bolder",
			}}
		/>
	</Slide>
	<Slide>
		<SlideTitle
			title="Qu'est ce qu'on peux faire d√®s maintenant"
			punctuation="?"
		/>
		<p>
			Utiliser la version Canary de React 19 ü¶Ü avec votre technologie pr√©f√©r√©
		</p>
		<div class="logo-container">
			<img
				class="fragment logo"
				alt=""
				src={BabelLogo}
				data-fragment-index="1"
			/>
			<img
				class="fragment logo"
				alt=""
				src={ViteLogo}
				data-fragment-index="2"
			/>
			<img
				class="fragment logo"
				alt=""
				src={NextLogo}
				data-fragment-index="3"
			/>
			<img
				class="fragment logo-remix"
				alt=""
				src={RemixLogo}
				data-fragment-index="4"
			/>
		</div>
		<div class="code-container">
			<pre
				class="code-sample fragment fade-in-then-out"
				data-fragment-index="1"><code>{`npm install babel-plugin-react-compiler@experimental
// ...
npm install react-compiler-runtime@experimental // <-- Pour des version ant√©rieur √† React 19`}
				</code></pre>
			<pre
				class="code-sample fragment fade-in-then-out"
				data-fragment-index="2"><code>{`plugins: [
	react({
		babel: {
			plugins: [
				["babel-plugin-react-compiler", ReactCompilerConfig],
			],
		},
	}),
]`}</code></pre>
			<pre
				class="code-sample fragment fade-in-then-out"
				data-fragment-index="3"><code>{`npm install next@canary babel-plugin-react-compiler@experimental

const nextConfig = {
  experimental: {
    reactCompiler: true,
  },
};`}</code></pre>
			<pre
				class="code-sample fragment fade-in-then-out"
				data-fragment-index="4"><code>{`npm install vite-plugin-babel

babelConfig: {
	presets: ["@babel/preset-typescript"],
	plugins: [
		["babel-plugin-react-compiler", ReactCompilerConfig],
	],
},`}</code></pre>
		</div>
		<p class="fragment">Et beaucoup d'autre ...</p>
		<div class="fragment warn">
			‚ö†Ô∏è Les versions Canary ne sont <strong>pas</strong> des versions stables et
			sont sujets √† des <strong>bugs</strong> et des <strong
				>breaking changes</strong
			>.<br /> Il faut donc l‚Äôutiliser en connaissance de cause.
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Et pour pr√©parer la release" punctuation="?" />
		<div class="r-stack steps">
			<ol data-id="liste">
				<li class="fragment">
					V√©rifier la compatibilit√© de votre codebase. <pre><code>Successfully compiled 8 out of 9 components.
StrictMode usage not found.
Found no usage of incompatible libraries.
</code></pre>
				</li>
				<li class="fragment">
					Utiliser le plugin eslint : <pre><code>eslint-plugin-react-compiler</code></pre>
				</li>
				<li class="fragment">
					Rejoindre le <strong>Working group</strong> du React Compiler
				</li>
			</ol>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="‚ö†Ô∏è Attention cependant" punctuation="!"
		style={{
			margin: "auto",
			fontSize: "2rem",
			fontWeight: "bolder",
		}}/>
	</Slide>
	<Slide>
		<SlideTitle title="‚ö†Ô∏è Attention cependant" punctuation="!" />
		<p class="padding">
			Le React Compiler n'est pas encore pr√™t pour la production, il est
			toujours en phase de d√©veloppement.
		</p>	</Slide>
	<Slide>
		<SlideTitle title="‚ö†Ô∏è Attention cependant" punctuation="!" />
		<p>
			Le React Compiler n'est pas encore pr√™t pour la production, il est
			toujours en phase de d√©veloppement.
		</p>
		<div class="r-stack">
			<img class="gif" alt="" src={LeakGif} />
			<img class="fragment callchain" alt="" src={CallChain} />
			<img class="fragment leak" alt="" src={Leak} />
		</div>
		<Ressource source="Articles par Kevin Schiener" />
	</Slide>
</Slide>

<style>
	.gif {
		width: 40rem;
	}

	.padding {
		padding: 5rem 0
	}

	.leak {
		rotate: -5deg;
		translate: 10rem;
		width: 70%;
	}

	.callchain {
		rotate: 5deg;
		translate: -10rem;
		width: 70%;
	}

	.steps {
		display: flex;
		justify-content: center;
		align-items: flex-end;
		flex-wrap: wrap;
		gap: 1rem;

		.step {
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			gap: 2rem;
			margin: 0;

			span {
				color: var(--primary-color);
				font-size: 0.8rem;
				font-weight: 700;
				border: dashed 2px var(--primary-color);
				border-radius: 15px;
				padding: 0.5rem 1rem;
			}
		}

		img {
			width: 250px;

			&.paint-img {
				width: 400px;
			}

			&.arrow {
				align-self: center;
				width: 50px;
				margin: 0;
			}
		}
	}

	.code-container {
		position: relative;
	}

	.code-sample {
		position: absolute;
		top: 0;
		width: 100%;
	}

	.logo-container {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 2rem;
	}

	.logo {
		width: 150px;
	}

	.logo-remix {
		width: 100px;
	}

	p {
		font-size: 1.8rem;
		font-weight: 700;
		color: var(--dark-grey);
	}

	ul,
	ol {
		list-style-type: decimal;

		li {
			font-size: 1.8rem;
			font-weight: 700;
			color: var(--dark-grey);
			margin: 1rem 0;
			text-wrap: balance;

			&::marker {
				font-size: 5rem;
				color: var(--primary-color);
			}

			strong {
				color: var(--primary-color);
			}
		}
	}

	pre {
		width: 50rem;
	}
	code {
		font-size: 1.25rem;
	}

	.warn {
		width: 75%;
		font-size: 1.6rem;
		font-weight: 500;
		color: var(--dark-grey);
		padding: 1rem;
		border-radius: 20px;
		text-wrap: balance;
		line-height: 2rem;
		text-align: left;
		border-left: 5px solid var(--primary-color);
		margin: 3rem auto;

		&::marker {
			font-size: 4rem;
			color: var(--primary-color);
		}

		strong {
			font-weight: 700;
			color: var(--primary-color);
		}
	}
</style>
