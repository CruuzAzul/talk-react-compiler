---
import Slide from "../../components/Slide.astro";
import SlideTitle from "../../components/SlideTitle.astro";
import Schema from "./Schema.astro";

import LaurenMessage from "../../assets/images/explication/lauren-message.png?url";
---

<Slide>
	<Slide>
		<SlideTitle title="+ 43 étapes au sein du React Compiler" punctuation="."/>
	</Slide>
	<!-- Blague 43 étapes -->
	<Slide>
		<aside class="notes">
			En mode :
			- On présente les 43 étapes une par une ?
			- À ton avis...
			- Ok, étape numéro une sur 43, HIR ... --se fait couper la parole--
			- Mais non ! On va pas faire ça !
			- Ah bon ?
			- On va plutôt les regrouper par catégories à la limite sinon on va perdre tout le monde et ça va contre la
			volonté de React !
		</aside>
		<SlideTitle title="+ 43 étapes au sein du React Compiler" punctuation="."/>
		<ul style={{padding: "5rem"}}>
			<li>HIR.</li>
		</ul>
	</Slide>
	<!-- Sommaire section -->
	<Slide>
		<aside class="notes">
			On va faire simple, je t'explique comment on peut simplifier ça et après je te dit pourquoi on fait simple.
		</aside>
		<SlideTitle title="Pour faire simple" punctuation=":"/>
		<p class="summary">
			<span><strong class="old">43</strong> étapes</span>
			<span data-fragment-index="2" class="fragment arrow">➜</span>
			<span data-fragment-index="2" class="fragment"><strong>10</strong> grandes catégories</span>
			<span data-fragment-index="3" class="fragment arrow">➜</span>
			<span data-fragment-index="3" class="fragment question">Pourquoi on fait simple ?</span>
		</p>
	</Slide>
	<!-- Schema étapes React Compiler -->
	<Slide>
		<SlideTitle title="Pour faire simple" punctuation=":"/>
		<Schema/>
		<strong></strong>
		<div class="def r-stack fragment" data-fragment-index="1">
			<div class="text-container">
				<p class="fragment current-visible fade-out" data-fragment-index="1">
					Déterminer qu'est <strong>ce qui doit être compilé dans les fichiers</strong>, selon notre configuration où
					les directives utilisées 📂
				</p>
			</div>
			<div class="text-container">
				<p class="fragment current-visible" data-fragment-index="2">Conversion de <strong>Babel AST</strong> en <strong>HIR</strong>
					(High-level Intermediate Representation) 🤯</p>
			</div>
			<div class="text-container">
				<p class="fragment current-visible" data-fragment-index="3">Processus de <strong>normalisation et d'optimisation
					du HIR</strong> 🧹</p>
			</div>
			<div class="text-container">
				<p class="fragment current-visible" data-fragment-index="4">
					Vérification des <strong>Rules of React</strong>, suppression du <strong>code mort</strong> et <strong>inférence
					de types</strong> et <strong>localisation des éléments réactifs</strong> ✅
				</p>
			</div>
			<div class="text-container">
				<p class="fragment current-visible" data-fragment-index="5">
					Inférence <strong>des groupes de valeurs qui peuvent être créés et mutés</strong> ainsi que les <strong>éléments
					impliqué dans ces créations / mutations</strong> 🔍
				</p>
			</div>
			<div class="text-container">
				<p class="fragment current-visible" data-fragment-index="6">
					Construction des <strong>portée réactives</strong> et optimisations des <strong>portées erronées</strong> 🏗️
				</p>
			</div>
			<div class="text-container">
				<p class="fragment current-visible" data-fragment-index="7">
					<strong>Conversion</strong> et <strong>renvoie</strong> au plugin Babel 📝
				</p>
			</div>
			<div class="text-container">
				<p class="fragment current-visible" data-fragment-index="8">
					Babel <strong>remplace le noeud d'origine</strong> par la nouvelle version 🔚
				</p>
			</div>
		</div>
		<aside class="notes">
			Blablabla, depuis tout à l'heure tu dis que c'est plus simple, mais là avec tout ce que tu viens de m'expliquer et
			en sachant que c'est une version très simplifié, ton React Compiler me fait un peu peur...
		</aside>
	</Slide>
	<!-- Pourquoi on s'en fiche -->
	<Slide>
		<aside class="notes">
			Message avec des membres de la Core Team React pour leur expliquer notre volonté et essayer de simplifier les
			choses.
		</aside>
		<SlideTitle title="Pourquoi on fait si simple" punctuation=" ?"/>
	</Slide>
	<Slide>
		<SlideTitle title="Pourquoi on fait si simple" punctuation=" ?"/>
		<img src={LaurenMessage} alt="Message de Lauren" class="message"/>
	</Slide>
	<Slide>
		<SlideTitle title="Pourquoi on fait si simple" punctuation=" ?"/>
		<img src={LaurenMessage} alt="Message de Lauren" class="message"/>
		<p class="traduction">
			<strong>🇫🇷 Traduction 🇫🇷</strong> Expliquez pas ça, c'est pas du tout le but du React Compiler, vous allez faire
			peur à tout le monde... 😡
		</p>
	</Slide>
</Slide>

<style>
	ul, ol {
		list-style-type: decimal;

		li {
			font-size: 1.8rem;
			font-weight: 700;
			color: var(--dark-grey);
			margin: 1rem 0;
			text-wrap: balance;

			&::marker {
				font-size: 5rem;
				color: var(--primary-color);
			}

			strong {
				color: var(--primary-color);
			}
		}
	}

	.summary {
		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: column;
		gap: 1.5rem;
		padding-top: 3rem;
		font-size: 3rem;
		font-weight: 700;
		color: var(--dark-grey);
		margin: 1rem 0;
		text-wrap: balance;

		strong {
			color: #7cbc7c;

			&.old {
				color: #c56262;
			}
		}

		.arrow {
			font-size: 2.5rem;
			color: var(--primary-color);
			transform: rotate(90deg);
		}

		.question {
			font-size: 2.5rem;
			color: var(--primary-color);
			border: dashed 2px var(--primary-color);
			border-radius: 15px;
			padding: 0.5rem 1.5rem;
			background-color: var(--background-color);
		}
	}

	.def {
		margin-top: 3.5rem;
		padding: 0 1.5rem;
		text-wrap: balance;
		border-left: 5px solid var(--primary-color);
		border-right: 5px solid var(--primary-color);
		background-color: var(--lighter-grey);
		border-radius: 2px;

		.text-container {
			display: flex;
			justify-content: center;
			align-items: center;
		}

		p {
			font-size: 1.2rem;
			font-weight: 600;
			color: var(--dark-grey);
			margin: 1rem 0;
			text-wrap: balance;
			line-height: 2.5rem;

			strong {
				font-weight: 700;
				color: var(--primary-color);
			}
		}
	}

	.message {
		width: 100%;
		height: auto;
		border-radius: 10px;
		box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.6);
	}

	.traduction {
		display: flex;
		flex-direction: column;
		gap: 2rem;
		font-size: 1.5rem;
		font-weight: 600;
		color: var(--dark-grey);
		margin-top: 2rem;
		text-wrap: balance;
		line-height: 2.5rem;

		strong {
			font-size: 3rem;
			font-weight: 700;
			color: var(--primary-color);
		}
	}
</style>
