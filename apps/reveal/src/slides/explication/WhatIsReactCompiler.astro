---
import Slide from "../../components/Slide.astro";
import SlideTitle from "../../components/SlideTitle.astro";

import Compiler from "../../assets/images/explication/compiler.png?url";
import Transpiler from "../../assets/images/explication/transpiler.png?url";
import Wikipedia from "../../assets/images/explication/wikipedia.png?url";
import Eslint from "../../assets/images/explication/eslint.png?url";

import Cross1 from "../../assets/images/explication/cross1.png?url";
import Cross2 from "../../assets/images/explication/cross2.png?url";
import Cross3 from "../../assets/images/explication/cross3.png?url";
import Separator from "../../components/Separator.astro";
---

<Slide>
	<Slide>
		<SlideTitle
			title="Le React Compiler, au final c'est quoi"
			punctuation="?"
			style={{
				margin: "auto",
				fontSize: "2rem",
				fontWeight: "bolder",
			}}
		/>
	</Slide>
	<Slide>
		<SlideTitle
			title="Le React Compiler, au final c'est quoi"
			punctuation="?"
		/>
		<div class="elements">
			<div class="element">
				<img
					src={Compiler}
					alt="Compiler"
					style={{
						height: "300px",
						margin: "auto",
						marginTop: "4rem",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
				<p class="label">Compiler</p>
			</div>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Un compilateur" punctuation="?" />
		<div class="elements">
			<div class="element">
				<img
					src={Compiler}
					alt="Compiler"
					style={{
						height: "300px",
						margin: "auto",
						marginTop: "4rem",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
				<p class="label">Compiler</p>
			</div>
			<div class="element">
				<p class="definition">
					Un compilateur est un programme qui transforme un code source en un
					code objet
					<img alt="" src={Wikipedia} class="wikipedia" />
				</p>
			</div>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Un Compiler ou un Transpiler" punctuation="?" />
		<div class="elements">
			<div class="element">
				<img
					src={Transpiler}
					alt="Transpiler"
					style={{
						height: "300px",
						margin: "auto",
						marginTop: "4rem",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
				<p class="label">Transpiler</p>
			</div>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Un Compiler ou un Transpiler" punctuation="?" />
		<div class="elements">
			<div class="element">
				<img
					src={Transpiler}
					alt="Transpiler"
					style={{
						height: "300px",
						margin: "auto",
						marginTop: "4rem",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
				<p class="label">Transpiler</p>
			</div>
			<div class="element">
				<p class="definition">
					Un transpileur est un type de compilateur qui prend le code source
					d'un langage de programmation et le compile dans un autre langage de
					programmation
					<img alt="" src={Wikipedia} class="wikipedia" />
				</p>
			</div>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Un Compiler ou un Transpiler" punctuation="?" />
		<div class="elements">
			<div class="element">
				<img
					src={Compiler}
					alt="Compiler"
					style={{
						height: "300px",
						margin: "auto",
						marginTop: "4rem",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
				<p class="label">Compiler</p>
			</div>
			<div class="element">
				<img
					src={Transpiler}
					alt="Transpiler"
					style={{
						height: "300px",
						margin: "auto",
						marginTop: "4rem",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
				<p class="label">Transpiler</p>
			</div>
			<p class="dontcare fragment fall">Important ?</p>
		</div>
	</Slide>
	<Slide>
		<SlideTitle
			title="Le React Compiler, au final c'est quoi"
			punctuation="?"
		/>
		<div class="elements">
			<div class="element">
				<img
					src={Compiler}
					alt="Compiler"
					style={{
						height: "300px",
						margin: "auto",
						marginTop: "4rem",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
				<p class="label">Compiler</p>
			</div>
			<div class="element fragment">
				<img
					src={Eslint}
					alt="Compiler"
					style={{
						height: "300px",
						margin: "auto",
						marginTop: "4rem",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
				<p class="label">Un plugin eslint</p>
			</div>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Qu'est ce qu'il fait" punctuation="?" />
		<div class="hooks">
			<div class="hook">
				<p data-fragment-index="1">
					useMemo
					<Separator width="200" />
				</p>
				<img
					data-fragment-index="2"
					class="fragment fade-down"
					src={Cross1}
					alt="Cross1"
					style={{
						margin: "auto",
						marginTop: "4rem",
						left: "10px",
						top: "20%",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
			</div>
			<div class="hook">
				<p data-fragment-index="1">
					React.memo
					<Separator width="200" />
				</p>
				<img
					data-fragment-index="3"
					class="fragment fade-up"
					src={Cross3}
					alt="Cross1"
					style={{
						margin: "auto",
						marginTop: "4rem",
						top: "25%",
						left: "37%",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
			</div>
			<div class="hook">
				<p data-fragment-index="1">
					useCallback
					<Separator width="200" />
				</p>
				<img
					data-fragment-index="4"
					class="fragment fade-down"
					src={Cross2}
					alt="Cross1"
					style={{
						margin: "auto",
						marginTop: "4rem",
						right: "20px",
						top: "23%",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
			</div>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Qu'est ce qu'il fait" punctuation="?" />
		<div class="hooks">
			<div class="hook">
				<p data-fragment-index="1">
					useMemo
					<Separator width="200" />
				</p>
				<img
					src={Cross1}
					alt="Cross1"
					style={{
						margin: "auto",
						marginTop: "4rem",
						left: "10px",
						top: "15%",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
			</div>
			<div class="hook">
				<p data-fragment-index="1">
					React.memo
					<Separator width="200" />
				</p>
				<img
					src={Cross3}
					alt="Cross1"
					style={{
						margin: "auto",
						marginTop: "4rem",
						top: "18%",
						left: "37%",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
			</div>
			<div class="hook">
				<p data-fragment-index="1">
					useCallback
					<Separator width="200" />
				</p>
				<img
					src={Cross2}
					alt="Cross1"
					style={{
						margin: "auto",
						marginTop: "4rem",
						right: "20px",
						top: "16%",
						filter: "drop-shadow(0 0 3px var(--grey))",
					}}
				/>
			</div>
		</div>
		<p class="quote">
			Mémoizer <strong>automatiquement</strong> des valeurs ou des groupes de valeurs
			dans les
			<strong>composants</strong> et les <strong>hooks</strong>.
		</p>
	</Slide>

	<!--Main use cases-->
	<Slide>
		<ol>
			<li>Éviter le re-rendu en cascade des composants.</li>
		</ol>
	</Slide>
	<Slide>
		<ol start="2">
			<li>Éviter des calculs coûteux externe à React.</li>
		</ol>
	</Slide>
	<Slide>
		<SlideTitle title="Et c'est pas tout" punctuation="..." />
		<ol class="soon">
			<li>Mémoriser les dépendances aux effets.</li>
			<li>Étapes d'amélioration du code JSX.</li>
			<li>Amélioration des devtools.</li>
			<li>...</li>
		</ol>
	</Slide>
</Slide>

<style>
	.fragment.fall {
		transform: translateY(-50rem);
	}

	.fragment.fall.visible {
		transform: translateY(0);
	}

	.elements {
		display: flex;
		justify-content: space-around;
		align-items: center;
		gap: 2rem;
		position: relative;

		.element {
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			gap: 2rem;

			.label {
				color: var(--primary-color);
				font-size: 0.8rem;
				font-weight: 700;
				border: dashed 2px var(--primary-color);
				border-radius: 15px;
				padding: 0.5rem 1rem;
			}

			img {
				width: 30rem;
				height: 30rem;
				object-fit: contain;
			}

			p {
				color: var(--primary-color);
				font-size: 2rem;
				font-weight: 700;
				border: dashed 2px var(--primary-color);
				border-radius: 15px;
				padding: 0.5rem 1rem;
				width: 75%;
				position: relative;

				&.definition {
					font-size: 1.6rem;
					text-wrap: balance;
					padding: 1rem 1.5rem;
					background-color: var(--background-color);
					width: 500px;

					.wikipedia {
						width: 5rem;
						position: absolute;
						top: -6rem;
						right: -2rem;
					}
				}
			}
		}

		.versus {
			flex: 1;
		}

		.dontcare {
			color: var(--red);
			background-color: var(--background-red);
			font-size: 7rem;
			rotate: -25deg;
			font-weight: 700;
			border: dashed 2px var(--red);
			border-radius: 15px;
			padding: 0.5rem 1rem;
			width: 75%;
			position: absolute;
		}
	}

	.hooks {
		padding: 6rem 0;
		display: flex;
		justify-content: space-between;
		align-items: center;

		.hook {
			color: var(--primary-color);
			font-size: 3rem;
			font-weight: 700;

			img {
				position: absolute;
				width: 250px;
				opacity: 0.9;
			}
		}
	}

	.quote {
		font-size: 1.6rem;
		font-weight: 700;
		text-align: center;
		margin-top: 4rem;
		border: dashed 2px var(--primary-color);
		border-radius: 15px;
		padding: 1rem 1.5rem;
		background-color: var(--background-color);

		strong {
			color: var(--primary-color);
		}
	}

	ol {
		display: block;
		text-align: left;
		list-style-type: decimal;

		&.soon {
			line-height: 2;
			list-style: "\1f51c";

			li {
				padding-left: 1.5rem;

				&::marker {
					font-size: 3rem;
					color: var(--primary-color);
				}
			}
		}

		li {
			font-size: 1.8rem;
			font-weight: 700;
			color: var(--dark-grey);
			margin: 1rem 0;
			text-wrap: balance;

			&::marker {
				font-size: 5rem;
				color: var(--primary-color);
			}

			strong {
				color: var(--primary-color);
			}
		}
	}
</style>
