---
import Slide from "../../components/Slide.astro";
import SlideTitle from "../../components/SlideTitle.astro";

import JsValid from "../../assets/images/rules/js-valid.png?url";
import ReactValid from "../../assets/images/rules/react-valid.png?url";
import NullValid from "../../assets/images/rules/null-valid.png?url";

import Rule1 from "../../assets/images/rules/rule1.png?url";
import Rule2 from "../../assets/images/rules/rule2.png?url";
import Rule3 from "../../assets/images/rules/rule3.png?url";

import Eslint from "../../assets/images/explication/eslint.png?url";
import ToggleOn from "../../assets/images/rules/toggle-on.png?url";
import StrictCode from "../../assets/images/rules/strict-code.png?url";
---

<Slide>
	<Slide>
		<SlideTitle title="Qu'est ce que √ßa suppose" punctuation="?"/>
	</Slide>
	<Slide>
		<SlideTitle title="Qu'est ce que √ßa suppose" punctuation="?"/>
		<div class="conditions">
			<div>
				<img src={JsValid} alt="JS Valid"/>
				<p>Code JavaScript valide</p>
			</div>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Qu'est ce que √ßa suppose" punctuation="?"/>
		<div class="conditions">
			<div>
				<img src={JsValid} alt="JS Valid"/>
				<p>Code JavaScript valide</p>
			</div>
			<div>
				<img src={NullValid} alt="Null Valid" style={{paddingLeft: "2rem"}}/>
				<p>Toutes les valeurs sont accessibles</p>
			</div>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Qu'est ce que √ßa suppose" punctuation="?"/>
		<div class="conditions">
			<div>
				<img src={JsValid} alt="JS Valid"/>
				<p>Code JavaScript valide</p>
			</div>
			<div>
				<img src={NullValid} alt="Null Valid" style={{paddingLeft: "3rem"}}/>
				<p>Toutes les valeurs sont accessibles</p>
			</div>
			<div>
				<img
					src={ReactValid} alt="React Valid"/>
				<p>Le code suit les Rules of React</p>
			</div>
		</div>
	</Slide>
	<Slide>
		<aside class="notes">Cette section d√©crit les r√®gles √† suivre pour √©crire du code React idiomatique. L'√©criture de
			code React
			idiomatique peut vous aider √† √©crire des applications bien organis√©es, s√ªres et composables. Ces propri√©t√©s
			rendent votre application plus r√©sistante aux changements et facilitent la collaboration avec d'autres
			d√©veloppeurs, biblioth√®ques et outils.
		</aside>
		<SlideTitle title="Les Rules of React, qu'est ce que c'est" punctuation="?"/>
	</Slide>
	<Slide>
		<SlideTitle title="Les Rules of React, qu'est ce que c'est" punctuation="?"/>
		<p class="badge">react.dev</p>
		<img src={Rule1} alt="Rule 1" width="200" class="qrcode"/>
		<div class="r-stack steps">
			<ol>
				<li>
					Components and Hooks must be pure
					<ul class="fragment">
						<li>Vos composants et Hooks doivent √™tre idempotents</li>
						<li>Aucun Side effects pendant un render</li>
						<li>Props et states sont immuables</li>
						<li>...</li>
					</ul>
				</li>
			</ol>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Les Rules of React, qu'est ce que c'est" punctuation="?"/>
		<p class="badge">react.dev</p>
		<img src={Rule2} alt="Rule 2" width="200" class="qrcode"/>
		<div class="r-stack steps">
			<ol start=2>
				<li>
					React calls Components and Hooks
					<ul class="fragment">
						<li>Ne jamais faire passer les Hooks comme des valeurs r√©guli√®res</li>
						<li>Ne jamais appeler directement les fonctions des composants</li>
						<li>Ne pas utiliser dynamiquement les Hooks (e.g : props...)</li>
						<li>...</li>
					</ul>
				</li>
			</ol>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Les Rules of React, qu'est ce que c'est" punctuation="?"/>
		<p class="badge">react.dev</p>
		<img src={Rule3} alt="Rule 3" width="200" class="qrcode"/>
		<div class="r-stack steps">
			<ol start=3>
				<li>
					Rules of Hooks
					<ul class="fragment">
						<li>N'appeler les Hooks qu'au top level (e.g : ‚ùå conditions, try/catch)</li>
						<li>N'appeler les Hooks qu'√† partir des fonctions React</li>
						<li>...</li>
					</ul>
				</li>
			</ol>
		</div>
	</Slide>
	<Slide>
		<SlideTitle title="Et pour vous aider avec ces r√®gles" punctuation=":"/>
		<div class="elements">
			<div class="element">
				<img src={ToggleOn} alt="Compiler" style={{
					width: "200px",
					margin: "auto",
					marginTop: "4rem",
					filter: "drop-shadow(0 0 3px var(--grey))"
				}}/>
				<img src={StrictCode} width="400" class="code" alt="Strict code picto"/>
			</div>
			<div class="element fragment">
				<img src={Eslint} alt="Compiler" style={{
					height: "200px",
					margin: "auto",
					marginTop: "4rem",
					filter: "drop-shadow(0 0 3px var(--grey))"
				}}/>
				<div>
					<p class="label">üì¶ eslint-plugin-react </p>
					<p class="label fragment">üì¶ eslint-plugin-react-compiler</p>
				</div>
			</div>
		</div>
	</Slide>
</Slide>

<style>
	.conditions {
		display: flex;
		gap: 5rem;
		align-items: flex-end;
		justify-content: center;
		padding-top: 3rem;

		div {
			width: fit-content;
			display: flex;
			flex-direction: column;
			align-items: center;
			gap: 1rem;

			img {
				height: 230px;
			}

			p {
				width: 100%;
				text-align: center;
				font-size: 1rem;
				font-weight: bold;
				color: var(--primary-color);
				border: dashed 2px var(--primary-color);
				border-radius: 15px;
				padding: 1rem 1.5rem;
			}
		}
	}

	ol {
		margin-left: 3rem !important;
		list-style-type: decimal;

		li {
			font-size: 1.8rem;
			font-weight: 700;
			color: var(--dark-grey);
			margin: 1rem 0;
			text-wrap: balance;

			&::marker {
				font-size: 5rem;
				color: var(--primary-color);
			}

			strong {
				font-size: 3rem;
			}
		}
	}

	ul {
		padding-top: 1rem;
		margin-left: 0 !important;
		list-style-type: disc;

		li {
			font-size: 1.2rem;
			font-weight: 500;
			color: var(--dark-grey);

			&::marker {
				font-size: 2rem;
				color: var(--primary-color);
			}

			strong {
				font-size: 3rem;
			}
		}
	}

	.badge {
		position: absolute;
		top: -45px;
		right: 0;
		font-weight: bold;
		color: var(--primary-color);
		background-color: var(--background-color);
		padding: 0.2rem 1rem;
		border-radius: 5px;
		font-size: 0.6rem;
		border: 0.5px solid var(--primary-color);
	}

	.qrcode {
		position: absolute;
		top: -20px;
		right: 0;
		border: 2px solid var(--primary-color);
		border-radius: 5px;
	}

	.elements {
		display: flex;
		justify-content: space-around;
		align-items: flex-start;
		gap: 2rem;

		.element {
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			gap: 2rem;
			width: fit-content;

			.label {
				color: var(--primary-color);
				font-size: 1rem;
				font-weight: 700;
				border: 2px solid var(--primary-color);
				border-radius: 15px;
				padding: 0.5rem 1rem;

				strong {
					color: var(--primary-color);
				}
			}
		}
	}

	.code {
		border: 2px solid var(--primary-color);
		border-radius: 10px;
	}
</style>
